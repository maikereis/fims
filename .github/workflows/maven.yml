name: Java CI with Maven

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven and run tests with coverage
        run: mvn clean verify

      - name: Upload JaCoCo coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: target/site/jacoco/jacoco.xml

  coverage-badge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Download coverage XML
        uses: actions/download-artifact@v4
        with:
          name: coverage-xml
          path: .

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install xmltodict requests

      - name: Generate coverage badge via Shields.io
        run: |
          python3 - << 'EOF'
          import xmltodict
          from pathlib import Path
          import requests

          # Parse JaCoCo XML
          cov_file = Path("coverage.xml")
          with cov_file.open() as f:
              doc = xmltodict.parse(f.read())
          counters = doc['report']['counter']
          line_counter = next(c for c in counters if c['@type'] == 'LINE')
          covered = int(line_counter['@covered'])
          missed = int(line_counter['@missed'])
          total_coverage = covered / (covered + missed) * 100

          color = "red" if total_coverage < 50 else "yellow" if total_coverage < 80 else "brightgreen"

          badge_url = f"https://img.shields.io/badge/coverage-{total_coverage:.1f}%25-{color}.svg"
          svg = requests.get(badge_url).text

          badge_path = Path("badges/coverage.svg")
          badge_path.parent.mkdir(exist_ok=True)
          badge_path.write_text(svg)
          print(f"Coverage badge generated at {badge_path}")
          EOF

      - name: Deploy coverage badge
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_CI_WORKFLOW_TOKEN }}
          publish_dir: badges
          publish_branch: gh-pages
          commit_message: "Update coverage badge"
